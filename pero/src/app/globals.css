@import "tailwindcss";

:root {
  --background: #ffffff;
  --foreground: #171717;
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: Arial, Helvetica, sans-serif;
  box-sizing: border-box;
  margin: 0;
}

*{
  box-sizing: border-box;
  margin: 0;
}

.body{
  margin: 0;
  background-color: black;
  width: 100%;
  height: 5rem;
}
.main{
  width: 100%;
  margin: auto;
}
.slider{
  width: 100%;
  height: var(--height);
  overflow: hidden;
  mask-image: linear-gradient(
      to right,
      transparent,
      #000 10% 90%,
      transparent
  );
}
.slider .list{
  display: flex;
  width: 100%;
  min-width: calc(var(--width) * var(--quantity));
  position: relative;
}
.slider .list .item{
  width: 150px;
  height: 150px;
  position: absolute;
  left: 100%;
  animation: autoRun 10s linear infinite;
  transition: filter 0.5s;
  animation-delay: calc( (10s / var(--quantity)) * (var(--position) - 1) - 10s)!important;
}
.slider .list .item img{
  width: 100%;
}
@keyframes autoRun{
  from{
      left: 100%;
  }to{
      left: calc(var(--width) * -1);
  }
}
/* .slider:hover .item{
  animation-play-state: paused!important;
  filter: grayscale(1);
} */
.slider .item:hover{
  filter: grayscale(0);
}
.slider[reverse="true"] .item{
  animation: reversePlay 10s linear infinite;
}
@keyframes reversePlay{
  from{
      left: calc(var(--width) * -1);
  }to{
      left: 100%;
  }
}

*{
  box-sizing: border-box;
}

#ball {
  width: 50px;
  height: 50px;
  position: fixed;
  top: 0;
  left: 0;
  background-color: rgb(216, 216, 255);
  border-radius: 50%;
  pointer-events: none;
  border: 2px solid #000; /* Added a border for visibility */
  filter: blur(1px); /* Corrected blur syntax */
  z-index: 1000; /* Ensure it's on top of other content */
}

.cursorFollower {
  position: fixed;
  width: 2rem;
  height: 2rem;
  border: 2px solid white;
  border-radius: 50%;
  transform: translate(-50%, -50%);
  transition: transform 0.3s;
  mix-blend-mode: difference;
  z-index: 999;
  pointer-events: none;
}
.cursorFollowerDot {
  position: fixed;
  width: 0.8rem;
  height: 0.8rem;
  background: white;
  border-radius: 50%;
  transform: translate(-50%, -50%);
  transition: transform 0.3s;
  mix-blend-mode: difference;
  z-index: 999;
  pointer-events: none;
}


.scroll-container {
  position: fixed;
  left: 0;
  right: 0;
  will-change: transform;

  .ghost {
    width: 100vw;
  }
}

.thumbnails-container {
  position: relative;
  height: 100vh;
  width: max-content;
  display: flex;
  align-items: center;
  padding: 0px 160px;
  background-color: black;
  border: 40px solid yellowgreen;

  .thumbnails {
    position: relative;
    display: flex;
    border: 20px solid yellow; 

    & > *:not(:last-child) {
      margin-right: 45px;
    }

    .thumbnail {
      height: 40vh;
      width: 700px;
      background-color: blue;
      border: 15px solid magenta;
    }
  }
}


.box {
  --border-angle: 0deg;
  border-radius: 12px;
  width: 100px;
  height: 100px;
  display: flex;
  justify-content: center;
  align-items: center;
  box-shadow: 0px 2px 4px hsl(0 0% 0% / 25%);
  animation: border-angle-rotate 2s infinite linear;
  border: 0.5rem solid transparent;
  position: relative;


  &.b {
    background: linear-gradient(white, white) padding-box,
      conic-gradient(
          from var(--border-angle),
          var(--bg) 50%,
        white
        )
        border-box;
  }

}

@keyframes border-angle-rotate {
  from { --border-angle: 0deg; }
  to { --border-angle: 360deg; }
}


/** boilerplate **/
/* body {
  --bg: hsl(190deg 20% 10%);
  background: var(--bg);
  font-size: 32px;
  display: flex;
  place-content: center;
  gap: 8rem;
  min-height: 100svh;
  flex-wrap: wrap;
} */

@property --border-angle {
  syntax: "<angle>";
  initial-value: 0deg;
  inherits: false;
}

.svg-container {
  position: relative;
  width: 50vw;
  height: 50vh;
}

.svg-container svg {
  position: absolute;
  top: 5;
  left: 50;
  width: 100px;
  height: 100px;

}

.svg-container svg:nth-of-type(3),
.svg-container svg:nth-of-type(4) {
  position: absolute;
  top: 5;
  left: 300;
  width: 200px;
  height: 200px;
}

@keyframes slideMask1 {
  from {
    x: -100%;
  }
  to {
    x: 180%;
  }
}

@keyframes slideMask2 {
  from {
    x: -100%;
  }
  to {
    x: 180%;
  }
}

.mask-rect-1 {
  animation: slideMask1 2s ease infinite;
}

.mask-rect-2 {
  animation: slideMask2 2s ease infinite;
  animation-delay: 2s; /* Delays start of the second animation */
}


/* From Uiverse.io by andrew-demchenk0 */ 
.switch {
  font-size: 17px;
  position: relative;
  display: inline-block;
  width: 64px;
  height: 34px;
}

.switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #73C0FC;
  transition: .4s;
  border-radius: 30px;
}

.slider:before {
  position: absolute;
  content: "";
  height: 30px;
  width: 30px;
  border-radius: 20px;
  left: 2px;
  bottom: 2px;
  z-index: 2;
  background-color: #e8e8e8;
  transition: .4s;
}

.sun svg {
  position: absolute;
  top: 6px;
  left: 36px;
  z-index: 1;
  width: 24px;
  height: 24px;
}

.moon svg {
  fill: #73C0FC;
  position: absolute;
  top: 5px;
  left: 5px;
  z-index: 1;
  width: 24px;
  height: 24px;
}

/* .switch:hover */.sun svg {
  animation: rotate 15s linear infinite;
}

@keyframes rotate {
 
  0% {
    transform: rotate(0);
  }

  100% {
    transform: rotate(360deg);
  }
}

/* .switch:hover */.moon svg {
  animation: tilt 5s linear infinite;
}

@keyframes tilt {
 
  0% {
    transform: rotate(0deg);
  }

  25% {
    transform: rotate(-10deg);
  }

  75% {
    transform: rotate(10deg);
  }

  100% {
    transform: rotate(0deg);
  }
}

.input:checked + .slider {
  background-color: #183153;
}

.input:focus + .slider {
  box-shadow: 0 0 1px #183153;
}

.input:checked + .slider:before {
  transform: translateX(30px);
}





/* 

// import React from 'react'

// const Effect = () => {
//   return (
//       <div className="box b">
//   ⏱️
//     </div>
//   )
// }

// export default Effect

// .box {
//   --border-angle: 0deg;
//   border-radius: 12px;
//   width: 100px;
//   height: 100px;
//   display: flex;
//   justify-content: center;
//   align-items: center;
//   box-shadow: 0px 2px 4px hsl(0 0% 0% / 25%);
//   animation: border-angle-rotate 2s infinite linear;
//   border: 0.2rem solid transparent;
//   position: relative;

//   &.b {
//     background: linear-gradient(white, white) padding-box,
//       conic-gradient(
//           from var(--border-angle),
//           var(--bg) 90%,
//         white
//         )
//         border-box;
//   }
// }

// @keyframes border-angle-rotate {
//   from { --border-angle: 0deg; }
//   to { --border-angle: 360deg; }
// }

// 
// body {
//   --bg: hsl(150deg 10% 15%);
//   background: var(--bg);
//   font-size: 32px;
//   display: flex;

// }

// @property --border-angle {
//   syntax: "<angle>";
//   initial-value: 0deg;
//   inherits: false;
// } */